#!/usr/bin/env bash
set -euo pipefail

REPO="$1"      # e.g. git@github.com:eduPHP/ai-resume-optimizer.git
BRANCH="$2"    # e.g. main
COMMIT="$3"    # commit hash

# Extract app name from repo URL (strip .git, take last path component)
APP=$(basename -s .git "$REPO")
BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

source $BASE_DIR/.env
BASE="$DEPLOY_DIR/$APP"
RELEASES="$BASE/releases"
CURRENT="$BASE/current"
TIMESTAMP=$(date +%Y%m%d%H%M%S)
NEW_RELEASE="$RELEASES/$TIMESTAMP"

echo "==> Deploying $APP @ $COMMIT ($BRANCH) to $NEW_RELEASE"

mkdir -p "$RELEASES"

# Before cloning
if [ -L "$CURRENT" ]; then
  PREV_COMMIT=$(git -C "$CURRENT" rev-parse --short HEAD)
else
  PREV_COMMIT=""
fi

# 1. Clone repository at branch
git clone --branch "$BRANCH" "git@github.com:$REPO.git" "$NEW_RELEASE"
cd "$NEW_RELEASE"

# 2. Checkout exact commit
git checkout -q "$COMMIT"

if [ -n "$PREV_COMMIT" ]; then
  CHANGED=$(git diff --name-only "$COMMIT" "$PREV_COMMIT")
else
  CHANGED="all"
fi

# 3. Install dependencies
if echo "$CHANGED" | grep -qE '^(all|composer\.json|composer\.lock)'; then
  echo "==> [$REPO] Composer changed, installing."
  composer install --no-interaction --prefer-dist --optimize-autoloader --no-dev
else
  echo "==> [$REPO] No composer changes, skipping install."
fi


# 4. Link shared files
if [ -f "$BASE/shared/.env" ]; then
  ln -sfn "$BASE/shared/.env" "$NEW_RELEASE/.env"
fi

if [ -d "$BASE/shared/storage" ]; then
  rm -rf "$NEW_RELEASE/storage"
  ln -sfn "$BASE/shared/storage" "$NEW_RELEASE/storage"
fi

if [ -d "$BASE/shared/vendor" ]; then
  rm -rf "$NEW_RELEASE/vendor"
  ln -sfn "$BASE/shared/vendor" "$NEW_RELEASE/vendor"
fi

# 5. Run Laravel commands
if echo "$CHANGED" | grep -qE '^(all|database/)'; then
  echo "==> [$REPO] Migrations changed, running migrate."
  php artisan migrate --force
else
  echo "==> [$REPO] No database changes, skipping migrate."
fi
php artisan config:cache
php artisan view:cache
php artisan horizon:terminate || true

# 6. Atomic symlink swap
ln -sfn "$NEW_RELEASE" "$CURRENT"

echo "==> Deploy complete. Now serving $NEW_RELEASE"
